import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
import { PerspectiveCameraObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/PerspectiveCamera";
// sop
import { AttribIdSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribId";
import { AttribPromoteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribPromote";
import { CopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy";
import { EventsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EventsNetwork";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { PlaneHelperSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PlaneHelper";
import { PlaneSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Plane";
import { SphereSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Sphere";
// mat
import { MeshBasicBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshBasicBuilder";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";

export class PolySceneWithNodeMap_sphere_blink extends PolyScene {
  override node(path: "/geo1"): GeoObjNode;
  override node(path: "/geo1/MAT"): MaterialsNetworkSopNode;
  override node(path: "/geo1/MAT/meshBasicBuilder1"): MeshBasicBuilderMatNode;
  override node(path: "/geo1/attribId1"): AttribIdSopNode;
  override node(path: "/geo1/attribPromote1"): AttribPromoteSopNode;
  override node(path: "/geo1/copy1"): CopySopNode;
  override node(path: "/geo1/material1"): MaterialSopNode;
  override node(path: "/geo1/plane1"): PlaneSopNode;
  override node(path: "/geo1/sphere1"): SphereSopNode;
  override node(path: "/grid"): GeoObjNode;
  override node(path: "/grid/planeHelper1"): PlaneHelperSopNode;
  override node(path: "/perspectiveCamera1"): PerspectiveCameraObjNode;
  override node(path: "/perspectiveCamera1/events1"): EventsNetworkSopNode;
  override node(
    path: "/perspectiveCamera1/events1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  override node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_sphere_blink {
  "geo1--transform"?: ParamValueSerializedTypeMap["folder"];
  "geo1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "geo1--display"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--CAD"?: ParamValueSerializedTypeMap["folder"];
  "geo1--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CSG"?: ParamValueSerializedTypeMap["folder"];
  "geo1--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "geo1--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADUnsharedEdges"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnections"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADConnectionsBetweenQuadsSharingEdge"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADConnectionsBetweenQuadsSharingPointOnly"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADConnectionsColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--QUADConnectionsColor-QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnectionsColor-QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnectionsColor-QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADEdgeCenterVectors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADEdgeNearestPointVectors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "geo1--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "geo1--TET"?: ParamValueSerializedTypeMap["folder"];
  "geo1--TetScale"?: ParamValueSerializedTypeMap["float"];
  "geo1--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshBasicBuilder1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshBasicBuilder1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshBasicBuilder1--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshBasicBuilder1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshBasicBuilder1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshBasicBuilder1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshBasicBuilder1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshBasicBuilder1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshBasicBuilder1--combine"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshBasicBuilder1--reflectivity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshBasicBuilder1--refractionRatio"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshBasicBuilder1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshBasicBuilder1--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshBasicBuilder1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshBasicBuilder1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshBasicBuilder1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshBasicBuilder1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshBasicBuilder1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshBasicBuilder1--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-attribId1--class"?: ParamValueSerializedTypeMap["integer"];
  "geo1-attribId1--id"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-attribId1--idName"?: ParamValueSerializedTypeMap["string"];
  "geo1-attribId1--idn"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-attribId1--idnName"?: ParamValueSerializedTypeMap["string"];
  "geo1-attribPromote1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-attribPromote1--classFrom"?: ParamValueSerializedTypeMap["integer"];
  "geo1-attribPromote1--classTo"?: ParamValueSerializedTypeMap["integer"];
  "geo1-attribPromote1--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-attribPromote1--name"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy1--srcGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy1--templateGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy1--count"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy1--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy1--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-plane1--size"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-plane1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--sizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--sizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-plane1--stepSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--segments"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-plane1--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-plane1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-plane1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "geo1-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "geo1-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "grid--transform"?: ParamValueSerializedTypeMap["folder"];
  "grid--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "grid--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "grid--t"?: ParamValueSerializedTypeMap["vector3"];
  "grid--t-tx"?: ParamValueSerializedTypeMap["float"];
  "grid--t-ty"?: ParamValueSerializedTypeMap["float"];
  "grid--t-tz"?: ParamValueSerializedTypeMap["float"];
  "grid--tx"?: ParamValueSerializedTypeMap["float"];
  "grid--ty"?: ParamValueSerializedTypeMap["float"];
  "grid--tz"?: ParamValueSerializedTypeMap["float"];
  "grid--r"?: ParamValueSerializedTypeMap["vector3"];
  "grid--r-rx"?: ParamValueSerializedTypeMap["float"];
  "grid--r-ry"?: ParamValueSerializedTypeMap["float"];
  "grid--r-rz"?: ParamValueSerializedTypeMap["float"];
  "grid--rx"?: ParamValueSerializedTypeMap["float"];
  "grid--ry"?: ParamValueSerializedTypeMap["float"];
  "grid--rz"?: ParamValueSerializedTypeMap["float"];
  "grid--s"?: ParamValueSerializedTypeMap["vector3"];
  "grid--s-sx"?: ParamValueSerializedTypeMap["float"];
  "grid--s-sy"?: ParamValueSerializedTypeMap["float"];
  "grid--s-sz"?: ParamValueSerializedTypeMap["float"];
  "grid--sx"?: ParamValueSerializedTypeMap["float"];
  "grid--sy"?: ParamValueSerializedTypeMap["float"];
  "grid--sz"?: ParamValueSerializedTypeMap["float"];
  "grid--scale"?: ParamValueSerializedTypeMap["float"];
  "grid--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "grid--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "grid--display"?: ParamValueSerializedTypeMap["boolean"];
  "grid--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "grid--CAD"?: ParamValueSerializedTypeMap["folder"];
  "grid--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "grid--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "grid--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "grid--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "grid--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "grid--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "grid--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "grid--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "grid--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "grid--CSG"?: ParamValueSerializedTypeMap["folder"];
  "grid--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "grid--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "grid--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "grid--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADUnsharedEdges"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "grid--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADConnections"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADConnectionsBetweenQuadsSharingEdge"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADConnectionsBetweenQuadsSharingPointOnly"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADConnectionsColor"?: ParamValueSerializedTypeMap["color"];
  "grid--QUADConnectionsColor-QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADConnectionsColor-QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADConnectionsColor-QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "grid--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADEdgeCenterVectors"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADEdgeNearestPointVectors"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "grid--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "grid--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "grid--TET"?: ParamValueSerializedTypeMap["folder"];
  "grid--TetScale"?: ParamValueSerializedTypeMap["float"];
  "grid--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "grid--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "grid--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "grid--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "grid--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "grid--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "grid--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "grid-planeHelper1--size"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLine"?: ParamValueSerializedTypeMap["color"];
  "grid-planeHelper1--colorCenterLine-colorCenterLiner"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLine-colorCenterLineg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLine-colorCenterLineb"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLiner"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLineg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLineb"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGrid"?: ParamValueSerializedTypeMap["color"];
  "grid-planeHelper1--colorGrid-colorGridr"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGrid-colorGridg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGrid-colorGridb"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGridr"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGridg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGridb"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--transform"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--t"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--tx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--ty"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--tz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--rx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--ry"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--rz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--scale"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "perspectiveCamera1--camera"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--controls"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--display"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--fov"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--frameMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--expectedAspectRatio"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "perspectiveCamera1--layer"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--render"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--setScene"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--scene"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--setRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--renderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--setCSSRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--CSSRenderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--doPostProcess"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--postProcessNode"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--useWebXR"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--useAR"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--useVR"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--main"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1-events1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--zoomSpeed"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--zoomToCursor"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--limits"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1-events1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--minZoom"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--maxZoom"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--clampPosition"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMin"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMin-positionMinx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMin-positionMiny"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMin-positionMinz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMinx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMiny"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMinz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMax"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMax-positionMaxx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMax-positionMaxy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMax-positionMaxz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMaxx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMaxy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--positionMaxz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--controls"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1-events1-cameraOrbitControls1--leftMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1-events1-cameraOrbitControls1--middleMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1-events1-cameraOrbitControls1--rightMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1-events1-cameraOrbitControls1--oneFingerTouch"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1-events1-cameraOrbitControls1--twoFingersTouch"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1-events1-cameraOrbitControls1--misc"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1-events1-cameraOrbitControls1--updateTargetEndMoveEnd"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
}
